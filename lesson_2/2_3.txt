問題

2_2で作成したSimpleJankenに以下のような変更を加えてます。

1.「プレイヤー1」のような味気ない名前ではなく、「村田さん」のように、それぞれ好きな名前を表示できるようにする
2.プレイヤーの人数を2～5人の間で自由に決められるようにする
3.プレイヤーの手の出し方を、すべてランダムではなくプレイヤーごとに変えられるようにする

上記の変更を加える場合、どのように直したらよいか考えてください

回答

オブジェクト指向を用いない直し方を考えます。

1.「プレイヤー1」のような味気ない名前ではなく、「村田さん」のように、それぞれ好きな名前を表示できるようにする
	ジャンケンの返し前の段階で各プレイヤーの名前を入力させ、String型の変数に格納する。
	ジャンケンの各回および全体での勝敗結果を示す際に、その変数によって名前を表示させる。
	
2.プレイヤーの人数を2～5人の間で自由に決められるようにする
	プレイヤーの名前を入力させる前の段階で、ジャンケンを行う人数を(2～5人の範囲で)入力させる。
	プレイヤーの名前の入力工程はfor文を用いるなどして人数の分だけ行えるようにする。
	乱数に応じてジャンケンの手を決める工程は、if文を設けるなどして、人数に応じて実行される部分とされない部分を作る。
	各回および全体での勝敗の判定に関しては、2～5人の4パターン文の「if文」「else if文」を用意する。
	(特に人数が多い場合の)if文の条件式はとても長くなるが、各プレイヤーの手に対応させる形での条件式を記述する手法を踏襲する。
	
3.プレイヤーの手の出し方を、すべてランダムではなくプレイヤーごとに変えられるようにする
	プレイヤーごとのジャンケンの手を決定する工程にて、乱数か手入力のどちらで手を決めるか選択させる。
	選択させる方法は0か1、などの2種類の数字を入力させ、数字ごとに乱数か手入力の処理に分岐する。
	手入力の際にも、0・1・2のように3種類の数字を入力させて、ジャンケンの手を選択させる。
	
上記のように、オブジェクト指向を用いない変更方法では、コードが冗長になってしまう。
特に、「ジャンケンの勝敗を判断する」というこのプログラムの本筋に関わる部分への変更の場合、記述量が何倍にもなると想定される。
変更1や変更3のように、些末な部分の変更なら記述量が多少増えるだけで済むが、
変更2のようにジャンケンを行う人数が変わる場合は、ジャンケンの勝敗判定において分岐や条件式の記述量が膨大になってしまう。
オブジェクト指向を用いない変更は、記述量を膨大にし、バグが発生する可能性も増やしてしまうと感じた。
	